<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">

<article lang="es" id="taller-doc">
  <articleinfo>
    <title>Taller de creación colaborativa de documentación</title>
    <subtitle>Ingeniería de la información</subtitle>
<!--      <date>$Date: 2002/07/14 16:13:20 $</date> -->
<!--      <releaseinfo>$Revision: 1.30 $</releaseinfo> -->
    <authorgroup>
      <author>
	<firstname>Gregorio</firstname>
	<surname>Robles</surname>
      </author>
      <author>
	<firstname>Jorge</firstname>
	<surname>Ferrer</surname>
      </author>
    </authorgroup>
    <contractsponsor></contractsponsor>
  </articleinfo>
  <sect1>
    <title>Introducción</title>
    <sect2>
      <title>Motivación</title>
      <para>
	La fusión de la filosofía del software libre y las nuevas formas
	de desarrollo propiciadas por la generalización de conexiones a
	Internet ha permitido que el desarrollo de software libre, generalmente
	distribuido y colaborativo, haya experimentado un gran auge en las
	dos últimas décadas. De hecho, se ha calculado que el volumen de
	código fuente de aplicaciones de software libre se duplica cada
	18 meses. Esta forma de hacer software se ha venido a denominar
	el modelo de bazar, en contraposición con el tradicional en el que 
	un arquitecto realiza el diseño y el reparto de tareas y un equipo de peones y operarios
	llevan a cabo la implementación del sistema. Podemos ver, por tanto, que el bazar supone interacciones entre colaboradores mucho más abiertas.
      </para>

      <para>
	Este tipo de experiencias, sin embargo, no se han implantado de
	manera similar a la hora de crear documentos, aún cuando las
	habilidades necesarias para poder tomar parte en la creación de
	un documento están potencialmente más generalizadas que con las que hay que contar para desarrollar software. En los últimos tiempos
	se está viendo la necesidad de tener un sistema que, teniendo en
	cuenta ciertas circunstancias particulares de la creación,
	edición y modificación de documentos, permita disfrutar de una sinergia similar a la que nos
	encontramos en el mundo del software libre a la hora de crear
	software. 
      </para>

      <para>
	Otra de las finalidades del sistema consiste en establecer los
	mecanismos necesarios para garantizar una calidad homogénea de
	la documentación libre. La carencia de los mismos actualmente
	provoca una sensación que hace que el lector frecuentemente opine que 
	este tipo de documentación sea de 
	baja calidad. Sin embargo, la realidad nos demuestra que existen documentos libres de
	gran calidad que en ocasiones quedan ocultos por otros que
	simplemente están en elaboración todavía. En particular
	creemos que es posible establecer en un entorno de creación de documentación 
	unos mecanismos de revisión que se encuentran presentes en las publicaciones
	editoriales tradicionales a la vez que se mantienen las
	ventajas del modelo bazar. 
      </para>

      <para>
	Este documento se centra en la posibilidad de crear una
	aplicación que permita y facilite la creación colaborativa y
	distribuida de documentación de calidad, así como su
	adaptación y mejora 
	continua. En él se presentan tanto los objetivos que se persiguen,
	como la manera de llevarlos a cabo, explicando las razones que nos han llevado a tomar
	estas decisiones. 
      </para>
    </sect2>


    <sect2>
      <title>Objetivos</title>
      <para>
        Como hemos podido ver en los párrafos introductorios, la plataforma para la creación de documentación distribuida tiene
        unos objetivos claros y concisos. Aunque es probable que la forma de
        implementarlos en futuras fases de desarrollo varíen a lo
        largo del tiempo, los objetivos que se van a enumerar en
        los siguientes párrafos deberán prevalecer. 
      </para>
      <variablelist>
	<varlistentry>
	  <term>Publicación de documentación original de forma
	    distribuida</term> 
	  <listitem>
	    <para>
	      Debe ofrecerse una infraestructura que permita publicar
	      documentos. La publicación incluirá la difusión del
	      documento en los ámbitos interesados por la temática que cubre, así como la
	      aplicación de los formatos de impresión, visualización,
	      etc que se consideren necesarios. Se debe hacer hincapié en que el autor puede estar en todo momento en un lugar diferente a la plataforma y a los lectores (potenciales colaboradores).
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Modificación y mejora de documentación de forma
	    continuada y colaborativa</term> 
	  <listitem>
	    <para>
	      <!-- FIXME: también por parte de los propios autores -->
	      Este objetivo consiste en permitir que cualquier persona
	      que lea una determinada documentación pueda colaborar en su
	      mejora, ya sea corrigiendo errores o mejorando algún
	      apartado que domine. Se debe poner énfasis en facilitar
	      todo tipo de colaboración por parte de los
	      lectores. Esto puede suponer que existan varios tipos de
	      mecanismos de comunicación con el autor, desde los más
	      simples y primitivos para usuarios ocasionales y sin
	      conocimientos técnicos de publicación, hasta otros más
	      complejos y efectivos para contribuidores asiduos o más
	      experimentados.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Mecanismos de revisión de la documentación</term>
	  <listitem>
	    <para>
	      Se pretende establecer un mecanismo de revisión de todos
	      los documentos que van a publicarse con el objetivo de
	      garantizar su calidad y mantener unas guías de
	      estilo. Este objetivo tiene un grave peligro: no deben
	      crearse cuellos de botella en el proceso de revisión. Si
	      esto ocurriera se perdería una de las grandes ventajas
	      de la documentación libre derivadas del modelo bazar.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Mecanismos de calificación de la documentación</term>
	  <listitem>
	    <para>
	      Además de la revisión por parte de un equipo en
	      principio cerrado, deben existir mecanismos para medir
	      la popularidad, así como el interés despertado por un
	      documento. Siempre es interesante ver
	      cuántos lectores ha tenido, así cómo cuál es la
	      valoración que éstos hacen del contenido que se les
	      ofrece. Este tipo de realimentación no existe en las publicaciones tradicionales de papel y vagamente en las que se hacen en Internet. Es muy difícil que un autor conozca el impacto de su(s) artículo(s) sino es por medios indirectos, como buenas críticas o el número de artículos en los que aparece referenciado.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>
  </sect1>
  <sect1>
    <title>Requisitos del taller</title>
    <para>
      En esta sección se formalizan y detallan los objetivos descritos
      hasta ahora en forma de requisitos. 
    </para>
    <sect2>
      <title>Requisitos funcionales</title>
      
      <orderedlist inheritnum="ignore" continuation="restarts"
		   role="functional-requisites">
	<listitem>
	  <para>
	    Consulta por parte de los lectores de los documentos
	    registrados. Para facilitar la búsqueda de dichos
	    documentos deben estar clasificados. En concreto se
	    presentará una lista de los últimos documentos global y
	    por categorías. Esta clasificación se hará de forma manual, aunque veremos
	    que también existen mecanismos que posibilitarán clasificaciones semiautomáticas.
	  </para>
	</listitem>
	<listitem>
	  <para>Los usuarios del sistema podrán registrarse en el
	  mismo. Cuando accedan al sistema y se autentiquen podrán
	  disponer de ventajas adicionales. No se requerirá ningún
	  dato personal más allá del propio correo electrónico para realizar el registro. El anonimato, de todas formas, es una decisión voluntaria por parte del usuario, ya que tendrá una página propio donde podrá presentarse si así lo desea.</para>
	</listitem>
	<listitem>
	  <para>
	    Deben permitirse las aportaciones pequeñas a un documento
	    por parte de los lectores. En concreto:
	    <itemizedlist>
	      <listitem>
		<para>Añadir bloques simples: párrafo, lista, etc.</para>
	      </listitem>
	      <listitem>
		<para>Nota</para>
	      </listitem>
	      <listitem>
		<para>Comentario (opinión)</para>
	      </listitem>
	      <listitem>
		<para>Referencia</para>
	      </listitem>
	      <listitem>
		<para>Modificar contenido (sin modificar el marcado)</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	
	<listitem>
	  <para>
	    Los usuarios registrados pueden solicitar que se les
	    notifique mediante correo electrónico u otro medio de
	    notificación cuando una aportación suya haya sido
	    aceptada.  
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Los usuarios registrados pueden solicitar que se les  
	    notifique por correo-e u otro medio de notificación cuando 
	    aparezca una nueva versión de un determinado documento o
	    bien cuando aparezca un nuevo documento de una categoría
	    concreta. 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Todo lector podrá contar con una página web personal donde
	    además de información personal que el propio lector publique
	    voluntariamente, se podrán seguir las aportaciones que ha
	    hecho a los diferentes documentos. Se plantea como futura mejora 
	    la creación de un mecanismo para
	    que esas aportaciones sean evaluadas en su conjunto (por
	    otros lectores o por el interés que propicien) y que esto
	    revierta en el estado del lector para con el taller. Esta
	    idea es utilizada, por ejemplo, en sitios de noticias en
	    Internet como Slashdot o Barrapunto y se conoce como
	    <emphasis>karma</emphasis>. Tener mucho
	    <emphasis>karma</emphasis> es signo inequívoco de que el  
	    lector es un miembro con cierto prestigio dentro de la
	    comunidad alrededor del taller.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Debe soportarse una gestión de versiones de los
	    documentos. En concreto debe permitirse:
	    <itemizedlist>
	      <listitem>
		<para>A los autores introducir nuevas versiones,
		compararlas con versiones anteriores y volver atrás si
		lo consideran necesario.</para>
	      </listitem>
	      <listitem>
		<para>A los lectores acceder a la última versión
		publicada, a versiones anteriores publicadas o a la
		última versión de un documento todavía en
		elaboración.</para> 
	      </listitem>
	      <listitem>
		<para>
		  Debe permitirse a los autores el acceso directo al
		  sistema de gestión de versiones si desean aprovechar
		  todas las funcionalidades del mismo incluidas las no
		  ofrecidas a través de la interfaz del taller.
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
	<listitem>
	  <para>Cualquier lector registrado debe poder introducir un
	  nuevo documento en el taller. A partir de ese momento podrá
	  introducir tantas nuevas versiones como considere necesario
	  hasta decidir que desea su publicación. Posteriormente
	  deberá poder introducir nuevas versiones del documento.</para>
	</listitem>
	<listitem>
	  <para>En la elaboración de un documento podrán participar
	    varios autores. Debe facilitarse su colaboración por los
	    medios posibles. En concreto deben soportarse el envío
	    automático de notificaciones a los demás cuando uno realiza
	    cambios.
	  </para>
	</listitem>
	<listitem>
	  <para>
	  Debe soportarse un mecanismo de revisión que permita
	  garantizar la calidad de los documentos publicados. Este
	  mecanismo no debe convertirse en un cuello de botella que
	  retrase notablemente la publicación de los documentos.
	  </para>
	</listitem>
      </orderedlist>
    </sect2>
    <sect2>
      <title>Requisitos no funcionales</title>
      <orderedlist>
	<listitem>
	  <para>
	    Las aportaciones de los lectores deben ser visibles
	    inmediatamente. Éstas deben separarse claramente del
	    texto original hasta que sean aceptadas. El objetivo es
	    fomentar la colaboración haciendo que las aportaciones sean
	    visibles por todos los lectores incluso antes de su
	    aceptación final por parte del autor. 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Los documentos y la funcionalidad del taller deben
	    estar disponibles a través del WWW. El taller debe ser
	    accesible por el mayor número de 
	    usuarios y autores posibles. Esto implica garantizar el
	    acceso independientemente de la localización así como la no
	    necesidad de tener conocimientos técnicos específicos para
	    poder usarlo, tal y como se concreta en los siguientes
	    requisitos. 

	  </para>
	</listitem>
	<listitem>
	  <para>
	    No debe cerrarse la posibilidad de otras interfaces. En
	    particular el acceso directo desde una herramienta de
	    autoría. 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    No debe necesitar más conocimientos técnicos que
	    aquéllos sobre los que escribe para hacer uso del taller. 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Si el autor conoce las herramientas o tecnologías en
	    las que se base el taller, debe poder beneficiarse de
	    ello. De esta forma se 
	    promueve que los autores las aprendan, ya que conocerlas
	    les aporta beneficios directos.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    El autor debe recibir notificaciones por correo
	    electrónico u otro medio de notificación de las
	    aportaciones hechas por los lectores u otros autores. 
	  </para>
	</listitem>
	<listitem>
	  <para>Debe ofrecerse a los autores un mecanismo que les
	  facilite la gestión de las aportaciones. Es fundamental
	  facilitar su aplicación al documento.</para>
	</listitem>
      </orderedlist>
    </sect2>
  </sect1>
  <sect1>
    <title>Análisis de casos de uso</title>
    <para>
      Una vez especificado el sistema se presenta un análisis de los
      elementos y mecanismos que se han considerado necesarios para
      llevar a cabo su realización. Comenzamos con un análisis de los
      actores y casos de uso involucrados, para después estudiar con
      mayor detalle el funcionamiento del sistema.
    </para>
    <para>
      Los casos de uso representan las acciones que un usuario del
      sistema puede realizar en éste. En este documento se usará
      el término <emphasis>actor</emphasis> para referirnos de
      forma general a cualquier tipo de usuario.
    </para>
    <para>
      El primer paso en el análisis es identificar los tipos de
      actores del sistema. En el caso del taller de documentación
      libre contamos con los siguientes participantes:
      <variablelist>
	<varlistentry>
	  <term>Lector</term>
	  <listitem>
	    <para>Usuario que accede al sistema fundamentalmente
	      para leer documentos.</para> 
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Lector registrado</term>
	  <listitem>
	    <para>
	      Usuario que se ha registrado en el sistema. De esta
	      forma puede autenticarse cuando accede y realizar
	      aportaciones a los documentos existentes. Se pretende
	      promover que todos los lectores se conviertan en
	      lectores registrados.
	    </para> 
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Autor</term>
	  <listitem>
	    <para>
	      Usuario que puede insertar documentos en el sistema y
	      realizar cambios en estos documentos. También puede
	      revisar documentos de otros autores a petición suya
	      tras un cambio grande.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Revisor</term>
	  <listitem>
	    <para>Un usuario adquiere este rol cuando revisa un
	      documento de un autor. Como resultado debe aceptarlo para
	      su publicación o enviar comentarios al autor. Cualquier
	      autor puede jugar el rol de revisor de los documentos de
	      otro autor.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Administrador</term>
	  <listitem>
	    <para>
	      El administrador del sistema no cuenta entre sus
	      funciones con tareas relacionadas directamente con los
	      contenidos como en el caso de los anteriores roles. Sin
	      embargo, su labor estará estrechamente ligada a la
	      ordenación y mantenimiendo de la documentación, ya que
	      será él el que cree nuevas secciones y
	      categorías. Asimismo, tendrá poder para modificar o
	      eliminar comentarios, etc. 
	    </para>
	    <para>
	       Por otro lado, el administrador del sistema deberá
	       realizar todas las actividades pertinentemente técnicas
	       para mantener el sistema en funcionamiento, como son el
	       mantenimiento y actualización del software, el
	       mantenimiento de los contenedores de contenidos (ya sean
	       bases de datos, ficheros, etc.), la gestión de los
	       recursos, etc. 
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </para>
    <para>
      Las acciones que estos actores pueden realizar sobre el
      sistema quedan reflejadas en los diagramas de casos
      de uso de las siguientes figuras. A la izquierda se sitúan
      los actores y a la derecha los casos de uso.
    </para>

    <figure float="0" id="figure-use-cases-reader">
      <title>Diagrama de casos de uso de lectores</title>
      <graphic fileref="img/use-cases-reader.png" format="PNG"/>
    </figure>
    <figure float="0" id="figure-use-cases-contributor">
      <title>Diagrama de casos de uso de lectores registrados</title>
      <graphic fileref="img/use-cases-contributor.png" format="PNG"/>
    </figure>
    <figure float="0" id="figure-use-cases-author">
      <title>Diagrama de casos de uso de autores</title>
      <graphic fileref="img/use-cases-author.png" format="PNG"/>
    </figure>
    <figure float="0" id="figure-use-cases-revisor">
      <title>Diagrama de casos de uso de revisores</title>
      <graphic fileref="img/use-cases-revisor.png" format="PNG"/>
    </figure>
  </sect1>


  <sect1 id="analisis-funcional">
    <title>Análisis funcional</title>
    <para>
      En esta sección se describe el funcionamiento del sistema.
      Se irán examinando cada uno de los casos de uso expuestos en la
      sección anterior y se describirá el funcionamiento con ayuda de
      diagramas UML de secuencia y estado.
    </para>
    <para>
      Se han agrupado casos de uso similares para facilitar una
      descripción de las partes comunes.
    </para>

    <sect2>
      <title>Creación de documentos</title>
      <para>
	Crear un documento en el sistema significa darlo de alta y
	poder acceder así a las funcionalidades de colaboración y
	recepción de aportaciones de los lectores. Al insertar un
	documento se crea una ficha sobre el mismo que le acompañará
	en esta primera versión y en las versiones sucesivas.
      </para>
      <para>
	Por ello nos referiremos con el término documento al conjunto
	formado por el texto y metainformación del mismo, las imágenes
	y otros datos. Todo ello puede encontrarse en un único fichero
	o en varios en función del formato empleado.
      </para>
      <!-- ¡¡¡ OJO !!! ¿Hay versionado de la metainformación? -->
      <sect3 role="use-case">
	<title>Caso de uso: Inserta documento nuevo</title>
	<para>
	  El siguiente diagrama de casos de uso muestra cómo responde el
	  sistema ante la introducción de un documento nuevo. El
	  objetivo tanto de este diagrama como de los siguientes es
	  identificar las entidades con diferentes responsabilidades que
	  son necesarias para llevar a cabo esta acción. Las flechas
	  muestran las relaciones entre ellas en un escenario típico. En
	  este caso, se han identificado 5 entidades involucradas:
	  <emphasis>Aplicación web</emphasis>,
	  <emphasis>Revisor automático</emphasis>,
	  <emphasis>Bibliotecario</emphasis>,
	  <emphasis>Almacén de metainformación</emphasis> y
	  <emphasis>Repositorio de ficheros.</emphasis>.
	</para>
	<para>
	  Para simplificar este diagrama se ha sustituido la
	  aplicación de un formato al documento por una nota. En
	  <xref linkend="inserta-nueva-version"/> se incluye esta
	  parte desglosado.
	</para>
	<figure float="0" id="figure-insertar1">
	  <title>Inserción de un nuevo documento</title>
	  <graphic fileref="img/insertar1.png" format="PNG"/>
	</figure>
      </sect3>
    </sect2>


    <sect2>
      <title>Gestión de versiones de documentos</title>
      <para></para>

      <sect3 role="grex">
	<title>Estados de un documento y gestión de sus versiones</title>
	<para>
	  Se pretende que un documento sea publicado sólo cuando tenga
	  suficiente calidad, aunque después existe la posibilidad de seguir un
	  proceso de mejora continua. Es importante en este punto tener clara una idea: un documento puede tener varias versiones paralelas. De esta forma, será muy frecuente el hecho de que un documento tenga una versión en un estado, mientras otra versión del mismo documento se encuentre en otro estado. Los siguientes párrafos intentan mostrar el funcionamiento de este sistema, a la vez que pretende aclarar la idea de tener varias versiones simultáneas de un documento.
	</para>
	<para>
	  En un entorno colaborativo con
	  más de un autor es necesario que existan simultáneamente dos
	  estados de la versión:
	  <emphasis>publicada</emphasis> y 
	  <emphasis>en elaboración</emphasis>. Este sistema nos va a
	  permitir gozar de varias ventajas y de una mayor
	  flexibilidad a la hora de realizar mejoras o modificaciones
	  a la documentación existente. 
	</para>
	<para>
	  Por analogía con las versiones estables del núcleo Linux,
	  consideraremos una versión 
	  <emphasis>publicada</emphasis> 
	  como una versión del documento acabado y completo, con concordancia en su totalidad. Podríamos suponer que las versiones del documento en este
	  estado se encuentran &quot;listos para imprimir&quot; y que tienen la
	  calidad suficiente para poder ser difundidos tal cual. 
	</para>
	<para>
	  Por su parte una versión del documento se encuentra <emphasis>en
	  elaboración</emphasis> cuando, como su propia nomenclatura
	  indica, necesita de ciertas mejoras o revisiones
	  antes de pasar a ser publicados. En el caso análogo de
	  Linux, existen versiones llamadas <emphasis>en
	  desarrollo</emphasis> en las que se introducen modificaciones que
	  todavía no se encuentran convenientemente maduras o probadas
	  como para que aparezcan en la versión estable. 
	</para>
	<figure float="0" id="figure-estados">
	  <title>Estados de las versiones de un documento</title>
	  <graphic fileref="img/estados_documento.png" format="PNG"/>
	</figure>
	<para>
	  Para entender mejor el concepto de
	  <emphasis>estados</emphasis> de las versiones de un documento documento, 
	  lo mejor será seguir el proceso de creación de documentación
	  más frecuente. Consideramos que todo documento durante sus
	  etapas iniciales se compone de versiones que se encuentran <emphasis>en
	  elaboración</emphasis>. Una vez que sus 
	  autores lo encuentren suficientemente maduro, podrán cambiar
	  el estado de la versión del documento y asignarla como publicado. Aunque el
	  hecho de considerarlo maduro es subjetivo y, por tanto,
	  subceptible de discusión, se pueden establecer una serie de
	  parámetros muy sencillos para certificar que esto es
	  así. Por ejemplo, una versión publicada no debe tener
	  secciones o párrafos por terminar (los famosos POR HACER). 
	</para>
	<para>
	  Una vez un documento pasa a tener una versión en estado
	  <emphasis>publicada</emphasis>, su difusión 
	  será mucho mayor y, por tanto, crecerá también la
	  probabilidad de que exista realimentación por parte de
	  lectores. Es en este momento, donde pueden empezar a
	  coexistir esta versión publicada con otras versiones del documento <emphasis>en
	  elaboración</emphasis>. Y es que
	  las modificaciones realizadas por los lectores sobre la
	  versión publicada, pasarán a formar parte de la versión
	  <emphasis>en elaboración</emphasis>. De esta 
	  forma, el lector podrá leer siempre la última versión
	  publicada, mientras el que quiera colaborar podrá hacerlo
	  teniendo en cuenta las últimas modificaciones que se han
	  hecho. 
	</para>
	<para>
	  La potestad para hacer que una versión de documento <emphasis>en
	  elaboración</emphasis> pase a ser publicada corresponderá
	  siempre a sus autores 
	  originales, por lo que de esta manera también se facilita el
	  hecho de que el autor principal tenga el poder de validación
	  sobre los cambios o modificaciones que se hagan sobre su
	  documento. 
	</para>
	<para>
	  En realidad, el proceso que se ha comentado, es una simplificación del proceso
	  que se sigue en la realidad, ya que hemos obviado la etapa en la que la versión del documento
	  se encuentra <emphasis>en revisión</emphasis>. Se trata de un estado intermedio
	  entre en elaboración y publicada en el que los revisores, tras leerse el
	  documento, podrán certificar que está lista para ser considerada como publicada
	  o por el contrario todavía no se encuentra suficientemente madura y ha de seguir
	  en el estado en elaboración.
	</para>
      </sect3>

      <sect3 role="use-case" id="inserta-nueva-version">
	<title>Caso de uso: Inserta nueva versión de un documento</title>
	<para>
	  Tras insertar un documento cualquiera de los autores del
	  mismo puede realizar modificaciones sobre el mismo e
	  introducir en el sistema una nueva versión. Esto provocará
	  que se actualice la metainformación del documento y que se
	  introduzcan los nuevos ficheros en el <emphasis>repositorio
	  de ficheros</emphasis>. Tras hacer esto se dará formato al
	  documento y se mostrará como nueva versión <emphasis>en
	  elaboración</emphasis>.
	</para>
	<para>
	   A partir de ese momento un autor puede pedir su revisión
	   tal y como se explica en uno de los casos de uso
	   posteriores. 
	</para>
	<figure float="0" id="figure-new-version">
	  <title>Nueva versión de un documento</title>
	  <graphic fileref="img/new-version.png" format="PNG"/>
	</figure>
      </sect3>
    </sect2>


    <sect2>
      <title>Proceso de revisión</title>
      <para></para>

      <sect3 role="grex">
	<title>La revisión entre iguales</title>
	<para>
	  La revisión entre iguales es uno de los mecanismos de
	  control de calidad del sistema. La idea que se persigue es
	  similar a la que se utiliza en un conocido portal de
	  artículos sobre los efectos socio-económicos de Internet y
	  las tecnologías de la información llamado FirstMonday 
	  (<ulink
	  url="http://www.firstmonday.dk">www.firstmonday.dk</ulink>).
	  Antes de que un
	  artículo se publique, debe ser leído por una serie de editores que darán
	  el visto bueno para la publicación definitiva. 
	</para>
	<para>
	  Sin embargo, debemos tener en cuenta que nuestro sistema no
	  es sólo un mero instrumento de publicación, sino que engloba
	  potencialmente todo el proceso de creación y corrección. La
	  revisión entre iguales es, por tanto, un buen instrumento
	  para marcar una frontera nítida entre las versiones en
	  desarrollo y la primera versión publicada. De esta manera, se
	  garantiza que la versión publicada ha alcanzado un nivel de
	  madurez, completitud y corrección aceptables para el amplio
	  público. 
	</para>
	<para>
	  Existe una revisión que es indispensable para todos los
	  documentos del sistema que es aquélla que se ha de pasar la
	  primera vez que un documento pase del estado en elaboración
	  al de publicado (esto pasará, claro está, si los revisores
	  así lo consideran). Una vez que el documento tiene una
	  versión que está en el estado publicado, el autor es libre
	  de pasar una versión en elaboración a publicado sin tener
	  que pedir una revisión para tal efecto. En todo caso, si lo
	  cree oportuno podrá hacerlo, pero se tratará de una medida
	  voluntaria. 
	</para>
      </sect3>
      <sect3 role="use-case">
	<title>Caso de uso: Revisor se subscribe a una
	categoría</title>
	<para>
	  Cualquier autor que haya publicado un documento tiene la
	  posibilidad de convertirse en 
	  revisor simplemente subscribiéndose a una categoría concreta
	  de documentos. A partir de ese momento le llegarán
	  notificaciones de autores que desean que sus documentos sean
	  publicados.
	</para>
	<para>
	  También puede subscribirse como revisor genérico. En este
	  caso recibirá también las peticiones que no hayan encajado
	  en ninguna de las categorías existentes. En <xref
	  linkend="categorias-documentos"/> se incluye una descripción
	  más amplia sobre el concepto de categoría de un documento.
	</para>
	<para>
	  El sistema de subscripciones es gestionado por el
	  <emphasis>Gestor de notificaciones</emphasis>.
	</para>
      </sect3>
      <sect3 role="use-case">
	<title>Caso de uso: Autor solicita revisión de su documento</title>
	<para>
	  Los autores disponen de una interfaz donde pueden ver el estado
	  de las versiones de sus documentos. Desde esta interfaz podrán solicitar la
	  revisión del mismo para su publicación.
	</para>
	<para>
	  Esta tarea sólo es obligatoria para la primera publicación
	  del documento. Posteriores revisiones del mismo podrán ser
	  publicadas directamente por cualquiera de los autores.
	</para>
	<para>
	  Cuando un autor solicita una revisión, deben enviarse
	  notificaciones a todos los revisores subscritos en la
	  categoría del documento. 
	</para>
      </sect3>
      <sect3 role="use-case">
	<title>Caso de uso: Revisor acepta revisión de un documento</title>
	<para>
	  Tras recibir una notificación un revisor puede acceder a la
	  interfaz web y autoasignarse la revisión de dicho
	  documento. El autor o autores recibirán una notificación con
	  información sobre quien es el encargado.
	</para>
	<para>
	  A partir de este momento el revisor puede enviar comentarios
	  al autor o bien validar el documento para que se proceda a
	  su publicación.
	</para>
      </sect3>
      <sect3 role="use-case">
	<title>Caso de uso: Revisor envía comentarios al autor</title>
	<para>
	  Cuando un revisor lee un documento puede enviar comentarios
	  al autor o autores recomendándoles cambios en el mismo. Se
	  deja a elección del revisor determinar si los cambios
	  propuestos son obligatorios para la aceptación del documento
	  o simplemente opcionales. En cualquier caso la función del
	  revisor será siempre la de recomendar y explicar; no debe
	  modificar el documento directamente. 
	</para>
	<para>
	  La comunicación entre el revisor y los autores puede
	  realizarse a través del gestor de notificaciones o usando
	  medios externos al sistema como el correo electrónico.
	</para>
      </sect3>
      <sect3 role="use-case">
	<title>Caso de uso: Revisor valida documento</title>
	<para>
	  Una vez que el revisor considera que un documento dispone de la
	  calidad necesaria puede acceder a la interfaz web para
	  validarlo. Esto provocará que el sistema publique el
	  documento. Si ya existía una versión anterior publicada del
	  documento será sustituida por la nueva.
	</para>
	<para>
	  Cuando un documento es validado sus autores reciben una
	  notificación. Como consecuencia de su publicación también
	  serán notificados todos aquellos lectores que se hayan
	  subscrito como interesados en la categoría a la que
	  pertenece este documento. Por último, en el caso de que el
	  documento publicado sea una nueva versión, también debería
	  notificarse a aquellos lectores que se hayan mostrado
	  interesados en recibir avisos cuando el documento se
	  actualice. 
	</para>
	<para>
	  La siguiente figura muestra un diagrama de secuencia con las
	  entidades que participan en este proceso y las relaciones
	  entre ellas en un escenario típico.
	</para>
	<figure float="0" id="figure-validate-document">
	  <title>Revisión positiva de un documento</title>
	  <graphic fileref="img/validate-document.png" format="PNG"/>
	</figure>
      </sect3>
    </sect2>


    <sect2>
      <title>Gestión de notificaciones</title>
      <para>
        Mediante el uso de notificaciones se pretende crear vínculos dinámicos entre 
	intereses. Así se da un servicio adicional que permite informar
	de la evolución de contenidos a los que así lo deseen. Ésta es otra forma de 
	conseguir que los usuarios visiten el sistema de manera asidua y vean que existe
	movimiento.
      </para>
      <sect3 id="categorias-documentos">
	<title>Categorías de los documentos</title>
	<para>
	  Se han identificado dos formas de determinar la
	  categoría de un documento con vistas a notificar a los
	  usuarios del sistema interesados:
	  <variablelist>
	    <varlistentry>
	      <term>Estática</term>
	      <listitem>
		<para>
		  Consiste en la creación de una serie de
		  categorías concretas y todos los documentos
		  deben ser clasificados en alguna de ellas por
		  los autores o revisores. 
		</para>
		<para>
		  La principal ventaja de esta solución es la
		  facilidad de su implementación por medio de
		  listas de correo.
		</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>Dinámica</term>
	      <listitem>
		<para>
		  Los documentos se clasifican dinámicamente en
		  función de su metainformación (por ejemplo de
		  palabras clave) o de su contenido. Se compara
		  dinámicamente el perfil del documento con el
		  interés de los subscriptores para determinar si
		  deben recibir una notificación o no.
		</para>
		<para>
		  La principal ventaja de este sistema es su
		  flexibilidad y fácil evolución. Permite
		  subscripciones a temas muy concretos o a temas
		  muy genéricos y no hay necesidad de
		  predeterminar las posibles categorías de los
		  documentos. 
		</para>
		<para>
		  Por otro lad, esta solución
		  es notablemente más difícil que la anterior y
		  probablemente implicaría una implementación
		  desde cero.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</para>
      </sect3>
      <sect3>
	<title>
	  Caso de uso: lector registrado se suscribe a un documento
	</title>
	<para>
	  Un lector registrado puede informar al sistema de su
	  interés por un documento. De esta forma cuando aparezcan
	  nuevas versiones del mismo se le enviarán notificaciones.
	</para>
      </sect3>
      <sect3>
	<title>
	  Caso de uso: lector registrado se suscribe a una categoría
	</title>
	<para>
	  Un lector que se ha registrado en el sistema puede
	  subscribirse a una categoría concreta y recibir
	  notificaciones cuando haya nuevos documentos de dicha
	  categoría o nuevas versiones de los mismos.
	</para>
      </sect3>
    </sect2>


    <sect2>
      <title>Publicación e impresión de documentos</title>
      <para>
        Un documento es publicado cuando se considera que tiene los requisitos necesarios
	para ser mostrado al público general. Una vez
	llegado a este estado ya ha alcanzado una calidad alta y la
	labor del sistema será difundirlo al mayor
	número de lectores posibles.
      </para>
      <para>
	La impresión consiste en aplicar formato a un documento para
	facilitar su lectura y difusión. Todos los documentos deben
	compartir un formato homogéneo que dé sensación de
	coherencia a los lectores. Por otro lado se
	proporcionaran al menos una versión lista para imprimir (PDF) y otra
	versión navegable (HTML) para ser consultada a través de la interfaz
	web. En cada una de estas versiones se seguirán las normas de
	estilo adecuadas para facilitar su lectura.
      </para>

      <sect3 role="use-case">
	<title>Caso de uso: Dar formato al documento</title>
	<para>
	  Cuando se da formato a un documento a un documento se
	  aplican plantillas para darle un formato homogéneo y para
	  crear formatos de impresión y navegación.
	</para>
	<para>
	  Existen varios mecanismos para aplicar plantillas a un
	  documento. Estos dependen fundamentalmente del formato en
	  que se encuentre el documento original. En <xref
	  linkend="tecnologias"/> se describen las posibilidades que
	  se contemplan para este taller.
	</para>
      </sect3>

      <sect3 role="use-case">
	<title>Caso de uso: Publicar documento</title>
	<para></para>
      </sect3>
    </sect2>


    <sect2>
      <title>Aportaciones de los lectores</title>

      <para>
        Ya en el resto del documento hemos venido hablando de la importancia que los
	lectores, potenciales colaboradores y autores, tienen en el sistema. En el siguiente
	apartado se hace hincapié en los aspectos que afectan a los mismos. 
      </para>

      <sect3>
	<title>El papel de las aportaciones de los lectores</title>
	<para>
	  La filosofía del sistema que estamos creando nos lleva a
	  poner especial énfasis en las aportaciones de los
	  lectores. De hecho, uno de los objetivos principales del
	  sistema lo podríamos enunciar diciendo que es nuestro deseo
	  que del lector pasivo al que estamos acostumbrados, se pase
	  a un lector activo, que interactue con el sistema, que
	  enriquezca, complete, valore o aporte al documento. De
	  hecho, y como hemos indicado ya con anterioridad, el lector
	  posee potencialmente todas las habilidades no técnicas
	  necesarias para hacerlo. 
	</para>
	<para>
	  Las habilidades y experiencia con las técnicas de
	  publicación serán desiguales y variarán sustancialemnte
	  entre lector y lector. Será tarea del sistema facilitar la
	  interacción del lector con el documento abstrayendo las
	  nociones técnicas con las que éste ha de contar.
	  Esto supone una diferenciación de lectores en varios
	  niveles a los que habrá que tratar de manera diferente:
	  mientras un lector novato en tecnologías de publicación
	  debería poder contar con una herramienta donde sólo
	  tuviera que introducir el texto (sin etiquetación
	  sintáctica ni semántica), un lector conocedor de
	  las herramientas y métodos existentes debería poder
	  utilizarlas, de manera que pueda aprovecharse de sus
	  conocimientos y habilidades. 
	</para>
	<para>
	  Antes de entrar en detalle sobre los tipos de aportación que
	  hemos considerado, hemos de profundizar en el
	  hecho de que la mayoría de los documentos cuenten con dos
	  versiones del mismo, una publicada y otra en desarrollo. Todas
	  las aportaciones al documento darán como resultado una
	  versión en desarrollo del documento, nunca una publicada. Para
	  pasar a este último estado, ha de ser el autor original el
	  que valide esa versión del documento y le asigne el estado publicada. 
	</para>
	<para>
	  Hemos desarrollado un caso de uso en el que especificamos
	  los diferentes tipos de aportación que puede realizar un
	  lector. 
	</para>
      </sect3>
      <sect3>
	<title>Cómo realizar aportaciones</title>
	<para>
	  Existen varias formas de en las que un lector puede realizar
	  una mejora o proponérsela al autor. Se muestran a continuación
	  ordenadas por grado de dificultad creciente: 
	  <orderedlist inheritnum="ignore" continuation="restarts">
	    <listitem>
	      <para>
		Mandar un correo-e al autor describiendo dónde está el
		error u ofreciendo una sección mejorada.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Añadiendo comentarios en la página que son
		inmediatamente accesibles para el resto de lectores. 
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Modificando on-line el documento. En este esquema debe
		proveerse de un mecanismo que permita al autor
		original o editores autorizados revisar los cambios y
		aceptarlos antes de que puedan ser visualizados por el
		resto de lectores. Mientras se aceptan podrían ser
		mostrados en una sección de mejoras propuestas. 
	      </para>
	    </listitem>
	  </orderedlist>
	</para>
      </sect3>

<!-- FIXME: como no lo tenemos terminado, no lo enseñamos

      <sect3 role="use-case">
	<title>Caso de uso: Usuario registrado envia aportación</title>

	<para>Descripción de "Notifica Erratas", "Añade contenido",
	  "Modifica contenido", "Añade comentario"</para>
	<para>Las aportaciones se muestran instantáneamente junto
	  al documento, pero no integradas en él, sino marcadas
	  claramente como aportaciones.</para>
      </sect3>
      <sect3 role="use-case">
	<title>Caso de uso: Autor valida aportación</title>
	<para></para>
      </sect3>
-->
    </sect2>
  </sect1>


  <sect1 id="analisis-arquitectonico">
    <title>Análisis arquitectónico</title>
    <para>
      Esta sección se muestra el resultado del análisis funcional
      realizado en <xref linkend="analisis-funcional"/> por medio de
      un diagrama que muestra la relación existente entre todas las
      entidades del sistema que han sido identificadas.
    </para>
    <para>
      Hemos decidido agrupar estas relaciones en un único diagrama en
      lugar de crear uno por cada grupo de funcionalidades debido a
      que el sistema está formado por un número no muy grande de
      entidades. 
    </para>
    <figure float="0">
      <title>Modelo de dominio del taller</title>
      <graphic fileref="img/domain-model.png" format="PNG"/>
    </figure>
    <para>
      A continuación se describen las responsabilidades asociadas a
      cada una de las entidades mostradas en este diagrama:
    </para>
    <variablelist>
      <varlistentry>
	<term>Aplicación web</term>
	<listitem>
	  <para>Se encarga de ofrecer una interfaz a los usuarios del
	    taller para que puedan acceder a toda su funcionalidad.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Revisión automática</term>
	<listitem>
	  <para>Representa el proceso de revisión de un documento en
	  el momento de su inserción en el taller. En este proceso
	  puede revisarse tanto la sintaxis como la ortografía del
	  documento entre otros aspectos.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Gestión documental</term>
	<listitem>
	  <para>Este es el proceso central del taller, el que se
	  encarga de gestionar los documentos y de mantener las
	  relaciones entre los distintos almacenamientos
	  (metainformación, fuentes y formatos impresos). Este proceso
	  es similar al llevado a cabo por un bibliotecario en una
	  biblioteca tradicional.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Impresión</term>
	<listitem>
	  <para>Proceso por el cual se generan los formatos que serán
	  mostrados a los usuarios. Estos formatos se crearán a partir
	  de los ficheros fuentes originales.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Gestión de notificaciones</term>
	<listitem>
	  <para>Envío de notificaciones a lectores, autores y
	  revisores y de acuerdo con las subscripciones realizadas por
	  estos.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Almacén de metainformación</term>
	<listitem>
	  <para>Contiene toda la información disponible en el taller
	  sobre un documento, incluyendo su versión publicada y su
	  versión en elaboración. Además de la metainformación típica
	  se incluye la localización de los ficheros fuente y de los
	  formatos impresos.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Repositorio de ficheros fuente</term>
	<listitem>
	  <para>Contiene los documentos en el formato en que fueron
	  introducidos por su autor. Este repositorio dispone de un
	  sistema de gestión de versiones que permite controlar la
	  evolución con el tiempo de estos ficheros.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Formatos impresos</term>
	<listitem>
	  <para>En este almacén se encuentran los formatos de un
	  documento listos para ser vistos a través de la interfaz
	  web. Se incluye al menos una versión imprimible y una
	  versión navegable del documento.</para>
	  <para>Cada documento puede disponer de formatos impresos de
	  su última versión publicada y de su versión en
	  elaboración. Cuando se publica esta última se mueven sus
	  formatos impresos sustituyendo a los que había para la
	  versión anterior publicada.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>


  <sect1 id="tecnologias">
    <title>Análisis de tecnologías y herramientas</title>
    <para>
      Hasta ahora, hemos hecho un análisis detallado del sistema y hemos priorizado entre los diferentes objetivos. Para terminar este estudio
      preliminar sobre un sistema de creación, edición y publicación de documentación,
      vale la pena reflexionar sobre las tecnologías sobre las que pudiera sustentarse.
      Los siguientes apartados intentan ser una breve introducción a las tecnologías y
      herramientas existentes en la actualidad. También se hará una escueta evaluación
      de los mismos y se estudiará su adecuación para ser utilizados en el sistema que
      se pretende crear.
    </para>

    <sect2>
      <title>Documentación estructurada</title>
      <para>
        Las herramientas de generación de documentación estructurada proporcionan grandes ventajas frente a editores visuales a la hora de crear documentación científica. Existen varias propuestas para crear documentos estructurados que serán presentados y comentados a continuación.
      </para>
      <sect3>
	<title>Docbook</title>
	<para>
	  DocBook es un dialecto de SGML ampliamente difundido a la hora de escribir documentación técnica. No en vano es el formato utilizado para los proyectos de documentación de Linux, de FreeBSD, KDE o GNOME. DocBook basa su estructuración en el uso de etiquetas. Las últimas versiones de DocBook permiten crear documentos conformes con el estándar XML.
	</para>
	<para>
	  En el caso de Docbook pueden emplearse plantillas DSSL o XSL
	  para dar formato al documento. Ambas permiten generar
	  formatos HTML y PDF con bastante calidad. En ambos casos
	  existen un juego de plantillas estándar que son
	  personalizables a la apariencia deseada. XSL sólo es
	  aplicable para la versión XML de Docbook y no están tan 
	  maduras como la versión DSSL aún. Sin embargo actualmente
	  están evolucionando con mayor rapidez y existen un mayor
	  número de herramientas para su tratamiento.
	</para>
      </sect3>
      <sect3>
	<title>LaTeX</title>
	<para>
	  LaTeX es una extensión hecha por Leslie Lamport del TeX diseñado por Donald Knuth. Aunque no permite una estructuración tan rígida como con DocBook, tiene características mucho mejores a la hora de realizar documentos que incluyan fórmulas matemáticas. Cuenta con un repositorio de material de publicación de nombre CTAN que sigue la analogía del CPAN de Perl. La flexibilidad de LaTeX, aun cuando podría parecer una ventaja, supone ciertos inconvenientes que ha hecho que pierda terreno con respecto a DocBook.
	</para>
      </sect3>
      <sect3>
	<title>TeXmacs</title>
	<para>
	  GNU TeXmacs es una editor de texto científico que aglutina el editor GNU Emacs con TeX, de forma que permite escribir documentos en TeX usando el paradigma WYSIWYG (What You See Is What You Get - Lo que ves es lo que obtienes). TeXmacs ofrece un gran número de posibilidades y es extensible utilizando los lenguajes de guión Guile/Scheme.
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Tecnologías web</title>
      <para>
        Como el sistema va a tener una interfaz web, es interesante ver las diferentes soluciones que el software libre ofrece en la actualidad. Veremos desde lenguajes de programación, pasando por aplicaciones web hasta servidores de aplicaciones.
      </para>
      <sect3>
	<title>PHP</title>
	<para>
	  PHP viene de &quot;PHP Hypertext Preprocessor&quot; que es un acrónimo recursivo al estilo GNU. Se trata de un lenguaje de guión estructurado orientado inicialmente a la creación de páginas web que ha ido creciendo para incluir orientación (parcial) a objetos, convertirse en un lenguaje de shell y llegar incluso a hacer sus pinitos en campos tan diferentes a las páginas web como es un entorno de escritorio (proyecto PHP-GTK).
	</para>
	<para>
	  PHP se ha convertido en uno de los lenguajes más populares debido sobre todo a su facilidad de aprendizaje, así como en la perfecta y sencilla integración con bases de datos con la que cuenta. De esta forma, muchas de las aplicaciones web que hacen uso extensivo de bases de datos utilizan PHP como lenguaje de programación.
	</para>
	<para>
	  Sin embargo, sólo permite la programación orientada a objetos de manera bastante limitada, carece de grandes repositorios de clases o bibliotecas como las que cuenta Perl con CPAN y hace que los desarrolladores tiendan a integrar código de presentación en HTML y código PHP en la creación de las aplicaciones web, de modo que el código se hace engorroso y difícil de depurar y mantener.
	</para>
      </sect3>
      <sect3>
	<title>Slashcode</title>
	<para>
	  Siendo generosos podemos considerar Slashcode, más conocido como Slash, como un servidor de aplicaciones para la publicación de contenidos web. Cuenta con una arquitectura modular que permite la agregación de plug-ins, además de infraestructura para generar un sistema de autentificación y autorización muy bueno basado en listas de control de acceso (listas ACL). Slashcode está escrito en Perl y su funcionamiento óptimo se produce funcionando con el módulo mod_perl de Apache. Los sitios de noticias de software libre, que cuentan con un gran número de accesos diario como SlashDot y Barrapunto, utilizan Slash.
	</para>
      </sect3>
      <sect3>
	<title>Zope</title>
	<para>
	  Zope, acrónimo de &quot;Z Object Publishing Environment&quot;, es un servidor de aplicaciones ideado con la finalidad de facilitar la publicación de contenidos en el web. En un principio, estaba pensado para ser usado como servicio de publicación para un periódico, aunque su flexibilidad, modularidad y orientación a objetos ha hecho del mismo un servidor de aplicaciones web en toda regla. Zope cuenta con una arquitectura muy sofisticada, a veces demasiado compleja. Permite crear aplicaciones de manera muy rápida, aunque se desestima su uso para aplicaciones con gran carga, ya que su arquitectura está sobredimensionada para hacer posible utilizarlo para solucionar un montón de problemas. Zope cuenta con una curva de aprendizaje muy alta que hace muy difícil encontrar desarrolladores que lo conozcan.
	</para>
      </sect3>
      <sect3>
	<title>Wiki</title>
	<para>
	  Los wiki son portales web en los que la contribución de los visitantes es libre. Cualquiera que entre en una página puede modificarla o añadir nuevos elementos a la misma. Los wiki más sofisticados cuentan con un sistema de control de versiones interno (transparente al usuario final) que posibilita volver atrás en caso de equivocación. El wiki en su máxima expresión es el porta Wikipedia, que como ellos mismos se definen es un &quot;esfuerzo colaborativo para crear una enciclopedia gratuita, libre y accesible por todos&quot;.
	</para>
	<para>
	  Aunque la finalidad que se suele hacer de los wikis es similar a la que se persigue en nuestro sistema, los aspectos de calidad y de autoría no se ven los suficientemente refrendados con su uso. Un sistema basado en un wiki no permite puntos tan importantes como la validación por parte del autor, la revisión por parte de editores, etc. Por el contrario, una idea que se toma de los wiki es la posibilidad de que cualquiera que así lo desee, pueda contribuir al documento. Del mismo modo, nuestro sistema también hará uso de un sistema de control de versiones transparente al usuario final.
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Gestión de versiones y repositorio</title>
      <para>
        Como hemos visto a lo largo de todo el documento, contar con un sistema de gestión de versiones es de capital importancia para el proyecto. En la actualidad existen pocas opciones libres, aunque parece que en los próximos tiempos podremos contar con mayor elección.
      </para>
      <sect3>
	<title>Concurrent Version System (CVS)</title>
	<para>
	  El CVS es el sistema de gestión de versiones más extendido en la actualidad, aunque desde hace mucho tiempo existen graves críticas a su arquitectura y a detalles de implementación. CVS cuenta, sin embargo, con un sistema sencillo de utilizar y aprender, además de permitir la mayoría de las acciones que se requieren.
	</para>
      </sect3>
      <sect3>
	<title>Subversion</title>
	<para>
	  Subversion es el sistema de gestión de versiones de siguiente generación. Pretende a la vez ganar en potencia e integridad, pero mantener la sencillez de CVS. Necesita Apache y de sus módulos mod_dav y mod_dav_svn para poder ser ejecutado correctamente. Podemos comprobar, por tanto, que se integrará perfectamente con entornos web. No cuenta con los fallos más comunes en CVS, como por ejemplo el de corrupción de sistemas de ficheros, que se arregla utilizando una base de datos que simula un sistema de ficheros. En la actualidad todavía se encuentra en una fase inestable, aunque el proyecto que se ha creado para su elaboración utiliza para su propio desarrollo el propio sistema Subversion.
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Gestión de notificaciones</title>
      <para>
        La gestión de notificaciones permitirá una cierta interacción entre los visitantes y el sistema. Lo más adecuado es automatizar en lo posible su funcionamiento, a la vez que evitar el número de acciones que el administrador ha de ejecutar manualmente. Por eso, las listas de correo electrónico y, sobre todo, el software de gestión que incorporan hacen que sea un opción muy a tener en cuenta.
      </para>
      <sect3>
	<title>Listas de correo (Majordomo, GNU Mailman)</title>
	<para>
	  Las listas de correo han sido, en parte, las grandes artífices de muchos proyectos de software libre, ya que han permitido la discusión y difusión de información. Sin embargo, para el sistema que nos atañe, la funcionalidad más interesante es la gestión de sus usuarios. Mediante el uso de listas de correo, el usuario puede administrar su suscripción de manera bastante sencilla, y más aún desde que todos los gestores de listas tienen un interfaz web de administración. En caso de que existan errores temporales o duraderos, es el propio software de gestión el que toma las medidas oportunas para que el funcionamiento de la misma siga siendo óptimo y, lo que es más importante, no tenga que haber intervención humana.
	</para>
	<para>
	  GNU Mailman y majordomo son los dos gestores de listas de correo-e con mayor implantación. Aunque GNU Mailman ha ido desbancando poco a poco al segundo gracias a sus muchas funcionalidades y a la facilidad de configuración a través de su interfaz web, en los últimos tiempos majordomo ha mejorado sustancialmente las posibilidades que ofrece.
	</para>
      </sect3>
    </sect2>
  </sect1>


  <sect1>
    <title>Conclusiones</title>

    <sect2>
      <title>Viabilidad del proyecto</title>
      <para>
        El análisis funcional realizado supone en si mismo una
        especificación bastante completa y detallada del taller. Su
        expresión formal empleando UML ha permitido descubrir antes de
        comenzar el desarrollo posibles dificultades y cómo podrían
        ser resueltas. El resultado final es un modelo que cumple con
        los objetivos y requisitos propuestos.
      </para>
      <para>
	Pero además del modelo es necesario disponer de las
	herramientas y las tecnologías necesarias para llevar a cabo
	su implementación y para permitir su uso por parte de los
	usuarios. En <xref linkend="tecnologias"/> se demuestra que
	estas tecnologías existen a día de hoy y muchas de ellas
	incluso llevan varios años de maduración.
      </para>
      <para>
	En definitiva nuestra conclusión es que es viable la
	construcción del taller de creación de documentación de forma
	colaborativa propuesto. En el siguiente apartado se presentan
	las dificultades identificadas para su construcción y su
	posterior implantación con éxito.
      </para>
    </sect2>

    <sect2>
      <title>Dificultades identificadas</title>
      <para>
	Se han identificado una serie de dificultades que se podrían
	presentar al llevar a cabo la implementación en implantación
	con éxito del taller de documentación libre. Las más
	importantes son:
	<itemizedlist>
	  <listitem>
	    <para>
	      La falta de un editor de documentación estructurado de
	      uso sencillo así como su integración con el taller 
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      Debido a la gran variedad de posibilidades que se
	      ofrecen y a tener como objetivo que las aportaciones
	      puedan hacerse independientemente del grado de
	      conocimiento y uso de técnicas de publicación por parte
	      de las personas que contribuyen, hacen que el proceso de
	      integración de las diferentes herramientas sea un
	      proceso que se presume será complejo.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      Para que el sistema funcione es necesario conseguir una
	      masa crítica de lectores y autores. Cómo lograr esto
	      está fuera del alcance de este documento.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      La integración de las modificaciones enviadas por los
	      lectores puede llegar a ser complicada en el caso de ser
	      abundantes. Es necesario seguir buscando mecanismos que
	      faciliten aún más al autor la tarea de revisarlos e
	      integrarlos. 
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </sect2>
    
    <sect2>
      <title>Extensiones al taller</title>
      <variablelist>
	<varlistentry>
	  <term>Área para incubar proyectos de documentación</term> 
	  <listitem>
	    <para>
	      Se propone la creación de un área donde uno o más autores
	      pueden exponer sus ideas y buscar colaboradores para crear
	      documentación o bien ideas sobre cómo crearlo.
	    </para>
	    <para>
	      El funcionamiento esperado de esta <emphasis>incubadora es
		el siguiente</emphasis>:
	      <itemizedlist>
		<listitem>
		  <para>Un autor tiene una idea sobre la que quiere
		    escribir</para> 
		</listitem>
		<listitem>
		  <para>Comienza a escribir y a exponer sus ideas sobre
		    lo que está escribiendo o va a escribir. Lo que va
		    escribiendo y las ideas asociadas se hacen públicas en
		    un área especial para proyectos en desarrollo.</para>
		</listitem>
		<listitem>
		  <para>Todos los que leen las ideas o lo que se va
		    escribiendo pueden aportar algo:</para>
		  <itemizedlist>
		    <listitem>
		      <para>Contactando con el autor para colaborar</para>
		    </listitem>
		    <listitem>
		      <para>Enviando correcciones</para>
		    </listitem>
		    <listitem>
		      <para>Añadiendo comentarios con ideas o peticiones
			de temas que le gustaría que se trataran</para>
		    </listitem>
		    <listitem>
		      <para>Aunque no aporte nada directamente, se
			mantienen estadísticas de las visitas que pueden
			servir al autor como guía del interés o éxito que está
			teniendo.</para> 
		    </listitem>
		  </itemizedlist>
		</listitem>
	      </itemizedlist>
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Biblioteca semántica</term>
	  <listitem>
	    <para>Aplicación de las ideas y las tecnologías de la web
	      semántica para favorecer la difusión de los contenidos y las
	      búsquedas inteligentes. Para ello se propone el uso de
	      ontologías existentes como 
	      DublinCore (http://dublincore.org) y de tecnologías
	      ampliamente extendidas como RDF, RDFS y DAML+OIL.
	    </para>
	  </listitem>
	</varlistentry>
<!-- FIXME: en un futuro será una lista estructura
	<varlistentry>
	  <term>Traducciones</term>
	  <listitem>
	    <para></para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Integración con editores de escritorio</term>
	  <listitem>
	    <para></para>
	  </listitem>
	</varlistentry>
-->
      </variablelist>
    <para>
      Otras posibles extensiones podrían ser la inclusión de una biblioteca semántica, de soporte a las traducciones y de mecanismos de integración con editores de escritorio.
    </para>
    </sect2>
  </sect1>

  <bibliography>

    <bibliodiv>
      <title>Edición editorial</title>
      <biblioentry id="sousa99">
	<author>
	  <firstname>José</firstname>
	  <surname>Martínez de Sousa</surname>
	</author>
	<title>Manual de edición y autoedición</title>
	<publisher>
	  <publishername>Pirámide</publishername>
	  <address format="linespecific">
	    <city>Madrid</city>
	  </address>
	</publisher>
	<date>1999</date>
      </biblioentry>
    </bibliodiv>

    <bibliodiv>
      <title>Documentación libre</title>

      <biblioentry id="GFDL">
	<author>
	  <affiliation>
	    <orgname>Free Software Fundation</orgname></affiliation>
	</author>
	<title>GNU Free Documentation License</title>
	<releaseinfo>Version 1.1</releaseinfo>
	<date>March 2000</date>
	<address format="linespecific">
          http://www.gnu.org/licenses/fdl.html
	</address>
      </biblioentry>

      <biblioentry id="Olea">
	<author>
	  <firstname>Ismael</firstname>
	  <surname>Olea</surname>
	</author>
	<title>Las tecnologías necesarias para un proyecto de
	  documentación moderno</title> 
	<address format="linespecific">
	  http://lucas.hispalinux.es/Manuales-LuCAS/LBTD/libro-blanco-tecnologias-doc-0.1/part-lucasv4.html
	</address>
      </biblioentry>
    </bibliodiv>

    <bibliodiv>
      <title>Modelo bazar</title>

      <biblioentry id="Raymond97">
	<author>
	  <firstname>Eric</firstname>
	  <surname>Raymond</surname>
	</author>
	<title>The cathedral and the bazaar</title>
	<date>1997</date>
	<address format="linespecific">
	  http://www.tuxedo.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/
	</address>
      </biblioentry>

      <biblioentry id="Bezroukov99">
	<author>
	  <firstname>Nikolai</firstname>
	  <surname>Bezroukov</surname>
	</author>
	<title>A second look at the cathedral and the bazaar</title>
	<date>Noviembre 1999</date>
	<address format="linespecific">
	  http://www.firstmonday.dk/issues/issue4_12/bezroukov/
	</address>
      </biblioentry>
     </bibliodiv>

     <bibliodiv>
      <title>Tecnologías presentadas</title>

      <biblioentry id="Docbook">
	<author>
	  <firstname>Norman</firstname>
	  <surname>Walsh</surname>
	</author>
	<author>
	  <firstname>Leonard</firstname>
	  <surname>Muellner</surname>
	</author>
	<title>DocBook: The Definitive Guide</title>
	<date>1999</date>
	<address format="linespecific">
	  http://www.docbook.org/tdg/en/html/docbook.html
	</address>
      </biblioentry>

      <biblioentry id="Slashcode">
	<author>
	  <firstname>Álvaro</firstname>
	  <surname>del Castillo</surname>
	</author>
	<title>Slashcode: Un servidor de aplicaciones libre</title>
	<date>2001</date>
	<address format="linespecific">
	  http://congreso.hispalinux.es/congreso2001/actividades/ponencias/delcastillo/book1.html
	</address>
      </biblioentry>

      <biblioentry id="zope">
	<author>
	  <firstname>Álvaro</firstname>
	  <surname>del Castillo</surname>
	</author>
	<title>Zope: el servidor de aplicaciones libre</title>
	<date>2001</date>
	<address format="linespecific">
	  http://programacion.com/tutorial.php?id=zope
	</address>
      </biblioentry>

      <biblioentry id="wikipedia">
	<title>Wikipedia</title>
	<date>2002</date>
	<address format="linespecific">
	  http://es.wikipedia.com
	</address>
      </biblioentry>

      <biblioentry id="CVS">
	<author>
	  <firstname>Ismael</firstname>
	  <surname>Olea</surname>
	</author>
	<title>Micro-cómo empezar a trabajar con CVS</title>
	<date>2001</date>
	<address format="linespecific">
	  http://www.olea.org/como-empezar-cvs/
	</address>
      </biblioentry>


      <biblioentry id="Subversion">
	<author>
	  <firstname>Ben</firstname>
	  <surname>Collins-Sussman</surname>
	</author>
	<title>Goals of the Subversion Project</title>
	<date>2001</date>
	<address format="linespecific">
	  http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=3
	</address>
      </biblioentry>

     </bibliodiv>

   </bibliography>
</article>





